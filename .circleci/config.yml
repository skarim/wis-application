version: 2
jobs:
  build_and_test:
    working_directory: ~/wis-application
    docker:
      - image: circleci/python:3.7
        environment:
          DJANGO_SETTINGS_MODULE: application.settings
          DJANGO_ENV: test
          DB_NAME: circle_test
          DB_USER: postgres
      - image: circleci/postgres:10.5
        environment:
          POSTGRES_DB: circle_test
          POSTGRES_USER: postgres
    steps:
      - checkout
      - restore_cache:
          key: wis-application-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            mkdir -p ./venv
            virtualenv ./venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          key: wis-application-dependencies-{{ checksum "requirements.txt" }}
          paths:
            - ./venv
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py test
  deploy_to_heroku:
    working_directory: ~/wis-application
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: install heroku cli
          command: sudo curl https://cli-assets.heroku.com/install.sh | sh
      - deploy:
          name: deploy to heroku
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/wis-application-production.git master
            else
              git push https://heroku:$HEROKU_API_KEY@git.heroku.com/wis-application-staging.git master
            fi
      - deploy:
          name: run migrations
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              heroku run python manage.py migrate -a wis-application-production
            else
              heroku run python manage.py migrate -a wis-application-staging
            fi

workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_and_test
      - deploy_to_heroku:
          requires:
            - build_and_test
          filters:
            branches:
              only:
                - master
                - /feature.*/
                - /bugfix.*/
                - /hotfix.*/
